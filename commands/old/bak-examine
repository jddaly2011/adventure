#1/usr/bin/python
import tiles
from list_items import list_items
from get_item import get_item

def examine(commands, available_actions, player, room):
    if commands[0] == "examine" and len(commands) < 2:
        print "\tUsage: examine [item]"
        return

    if commands[1] == "all":
        for item in room.inventory:
            print "\t{}: {}".format(item.shortnames[0], item.description)

        if room.npcs:
            for npc in room.npcs:
                print "\t{}: {}".format(npc.shortnames[0], npc.description)
                if npc.inventory:
                    print "\t{} appears to be holding:".format(npc.name)
                    for item in npc.inventory:
                        print "\t{}".format(item.name)
        return

    items, things, npc_items = list_items(room, player)

    item, owner  = get_item(room, player, commands[1])

    if not item:
        print "\tI do not know the fucking word {}.".format(commands[1])
        return

    if commands[1] not in things:
        print "\tI do not know the word {}.".format(commands[1])
        return

            

    if commands[1] in items:
        for item in room.inventory:
            if hasattr(item, "opened") and item.opened:
                for sub_item in item.inventory:
                    if commands[1] in sub_item.shortnames :
                        print sub_item.description
                        return


            for sname in item.shortnames:
                if commands[1] == sname:
                    print item.description
                    if hasattr(item, "opened"):
                        if item.opened:
                            for thing in item.inventory:
                                print "\tThere is a {} here.".format(thing)
                    return
                    

        for item in player.inventory:
            for sname in item.shortnames:
                if commands[1] == sname:
                #    player.describe_an_item(item)
                    print item.description
                    return


    if room.npcs:
        for npc in room.npcs:
            for sname in npc.shortnames:
                if commands[1] == sname:
                    print "{}".format(npc.description)
                    if npc.inventory:
                        print "\t{} appears to be holding:".format(npc.name)
                        for item in npc.inventory:
                            print "\t{}".format(item.name)
                    return
    

    if commands[1] in npc_items:
        for npc in room.npcs:
            if npc.inventory:
                for item in npc.inventory:
                    for sname in item.shortnames:
                        if commands[1] == sname:
                            print "\t{} declines to show you the {}".format(npc.name, commands[1])
                            return



    if commands[1] in things:
        print "\tYou don't see the {} here.".format(commands[1])
        return


    print "\tIt may be a {}".format(commands[1])
    
    

    # if player.inventory is not None and commands[1] in things:
    #     for item in player.inventory:#room.inventory:
    #         if commands[1] in item.shortnames:
    #             player.describe_an_item(item)
    #             return
    #     else:
    #         print "\tYou do not have {}".format(commands[1])
    #         return
      
    # if commands[0] == "examine" and len(commands) > 1:
    #     print "\tIt is a {}".format(commands[1])
    #     return
         

    # print "You have tripped in {}".format(room.room_name())
    
# if __name__ == "__main__":
#     trip()
